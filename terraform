# this is the main terraform file

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 3.27"
    }
  }
}

provider "aws" {
  profile = "default"
  region  = "us-east-1"
}

# vpc
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/24"
  enable_dns_hostnames = true
  enable_dns_support = true
}

# internet gateway
resource "aws_internet_gateway" "internet_gateway" {
  vpc_id = aws_vpc.my_vpc.id
  depends_on = [aws_vpc.my_vpc]
}

# subnets
resource "aws_subnet" "public1" {
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = "10.0.0.0/26"
  availability_zone = "us-east-1"
}
resource "aws_subnet" "public2" {
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = "10.0.0.64/26"
  availability_zone = "us-east-1"
}
resource "aws_subnet" "private1" {
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = "10.0.0.128/26"
  availability_zone = "us-east-1"
}
resource "aws_subnet" "private2" {
  vpc_id            = aws_vpc.my_vpc.id
  cidr_block        = "10.0.0.192/26"
  availability_zone = "us-east-1"
}

# public route table
resource "aws_route_table" "public_route_table" {
  vpc_id = aws_vpc.my_vpc.id

}

resource "aws_route" "aws_route_public" {
  route_table_id = aws_route_table.public_route_table.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id = aws_internet_gateway.internet_gateway.id
}

# private route table
resource "aws_route_table" "private_route_table" {
  vpc_id = aws_vpc.my_vpc.id

}

resource "aws_route" "aws_route_private" {
  route_table_id = aws_route_table.private_route_table.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id = aws_internet_gateway.internet_gateway.id
}

# NAT gateway
resource "aws_nat_gateway" "nat_gateway" {
  subnet_id     = aws_subnet.public1.id

  depends_on = [aws_internet_gateway.internet_gateway]
}

# Elastic IP Address
resource "aws_eip" "eip" {
  // todo
}

# AWS Instance (ec2)
resource "aws_instance" "main_instance" {
     ami = "ami-00dfe2c7ce89a450b"            #standard free tier amazon-linux-ami
     instance_type = "t2.micro"
     availability_zone = "us-east-1"
}

# security group
resource "aws_security_group" "allow_tls" {
  name        = "allow_tls"
  description = "Allow ssh access via port 22"
  vpc_id      = aws_vpc.my_vpc.id

  ingress = [
    {
      from_port        = 22
      to_port          = 22
      protocol         = "tcp"
      cidr_blocks      = [aws_vpc.my_vpc.cidr_block]
    }
  ]
}
